.tm-quark-tag {
  background-color: transparent;
  border: 1px solid;
  border-radius: 3px;
  box-sizing: border-box;
  display: inline-flex;
  margin: 0;
  padding: 0;
  touch-action: manipulation;
  text-decoration: none;
  vertical-align: top;

  *,
  *::before,
  *::after {
    box-sizing: inherit;
  }

  [type="button"]:-moz-focusring {
    outline: 0;
  }

  &:focus,
  &:active {
    outline: none;
    -moz-outline-style: none;
  }

  &_type {
    &_link,
    &_button {
      cursor: pointer;
    }
  }

  &_size {
    &_small {
      font-size: 11px;
      height: 20px;
      line-height: 16px;
      padding: 0 9px;
    }

    &_medium {
      font-size: 14px;
      height: 40px;
      line-height: 21px;
      padding: 0 19px;
    }
  }

  &_color-scheme {
    &_blue {
      border-color: #cfd8dc;
      color: #90a4ae;

      &:hover {
        border-color: #2196f3;
        color: #2196f3;
      }

      &:active {
        background-color: #2196f3;
        border-color: #2196f3;
        color: #fff;
      }
    }

    &_red {
      border-color: #cfd8dc;
      color: #90a4ae;

      &:hover {
        border-color: #d84315;
        color: #d84315;
      }

      &:active {
        background-color: #d84315;
        border-color: #d84315;
        color: #fff;
      }
    }
  }

  &:active {
    padding-top: 2px;
  }

  &_disabled {
    border-color: #dde3e6;
    color: #cfd8dc;
    cursor: disabled;
    pointer-events: none;
  }

  &__content {
    align-items: center;
    display: flex;
    flex-flow: row nowrap;
  }

  &__cross {
    align-items: center;
    align-self: center;
    display: inline-flex;
    height: 100%;
    justify-content: center;
    margin-left: 10px;
    width: 10px;

    .tm-quark-tag:not(:hover, :active, :focus) & {
      color: #cfd8dc;
    }

    .tm-quark-tag_disabled & {
      color: #dde3e6;
    }

    &::before,
    &::after {
      border: 1px solid;
      content: "";
      height: 10px;
      width: 2px;
    }

    &::before {
      transform: translateX(50%) rotate(-45deg);
    }

    &::after {
      transform: translateX(-50%) rotate(45deg);
    }
  }
}
